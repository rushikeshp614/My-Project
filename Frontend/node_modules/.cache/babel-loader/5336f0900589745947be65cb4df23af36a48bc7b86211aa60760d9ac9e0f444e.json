{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rushi\\\\OneDrive\\\\Desktop\\\\Project\\\\my-app\\\\src\\\\components\\\\CodingScreen.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport NavBar from \"./NavBar\";\nimport AceEditor from 'react-ace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/tomorrow';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CodingScreen() {\n  _s();\n  const [userCode, setUserCode] = useState(``);\n\n  // State variable to set editors default language\n  const [userLang, setUserLang] = useState(\"python\");\n\n  // State variable to set editors default theme\n  const [userTheme, setUserTheme] = useState(\"vs-dark\");\n\n  // State variable to set editors default font size\n  const [fontSize, setFontSize] = useState(20);\n\n  // State variable to set users input\n  const [userInput, setUserInput] = useState(\"\");\n\n  // State variable to set users output\n  const [userOutput, setUserOutput] = useState(\"\");\n\n  // Loading state variable to show spinner\n  // while fetching data\n  const [loading, setLoading] = useState(false);\n  const options = {\n    fontSize: fontSize\n  };\n  function handleChange() {\n    value => {\n      setUserCode(value);\n    };\n  }\n  function compile() {\n    setLoading(true);\n    if (userCode === ``) {\n      return;\n    }\n\n    // Post request to compile endpoint\n    axios.post(`http://localhost:8000/compile`, {\n      code: userCode,\n      language: userLang,\n      input: userInput\n    }).then(res => {\n      setUserOutput(res.data.output);\n    }).then(() => {\n      setLoading(false);\n    });\n  }\n\n  // Function to clear the output screen\n  function clearOutput() {\n    setUserOutput(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"codingScreenBody\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Python Loops\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"What is your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-output-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-editor\",\n          id: \"editor\",\n          children: /*#__PURE__*/_jsxDEV(AceEditor, {\n            mode: userLang,\n            theme: userTheme,\n            name: \"my-editor\",\n            width: \"100%\",\n            height: \"800px\",\n            editorProps: {\n              $blockScrolling: true\n            },\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => compile(),\n          children: \"Run\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(CodingScreen, \"DGV0CZ6GLvF5toI02DKJEmp+c4w=\");\n_c = CodingScreen;\nexport default CodingScreen;\nvar _c;\n$RefreshReg$(_c, \"CodingScreen\");","map":{"version":3,"names":["React","NavBar","AceEditor","useState","jsxDEV","_jsxDEV","CodingScreen","_s","userCode","setUserCode","userLang","setUserLang","userTheme","setUserTheme","fontSize","setFontSize","userInput","setUserInput","userOutput","setUserOutput","loading","setLoading","options","handleChange","value","compile","axios","post","code","language","input","then","res","data","output","clearOutput","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","mode","theme","name","width","height","editorProps","$blockScrolling","onChange","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rushi/OneDrive/Desktop/Project/my-app/src/components/CodingScreen.jsx"],"sourcesContent":["import React from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport AceEditor from 'react-ace';\r\nimport 'brace/mode/javascript';\r\nimport 'brace/theme/tomorrow';\r\nimport { useState } from \"react\";\r\n\r\nfunction CodingScreen() {\r\n\r\n    const [userCode, setUserCode] = useState(``);\r\n\r\n    // State variable to set editors default language\r\n    const [userLang, setUserLang] = useState(\"python\");\r\n\r\n    // State variable to set editors default theme\r\n    const [userTheme, setUserTheme] = useState(\"vs-dark\");\r\n\r\n    // State variable to set editors default font size\r\n    const [fontSize, setFontSize] = useState(20);\r\n\r\n    // State variable to set users input\r\n    const [userInput, setUserInput] = useState(\"\");\r\n\r\n    // State variable to set users output\r\n    const [userOutput, setUserOutput] = useState(\"\");\r\n\r\n    // Loading state variable to show spinner\r\n    // while fetching data\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const options = {\r\n        fontSize: fontSize\r\n    }\r\n\r\n    function handleChange() {\r\n        (value) => {\r\n            setUserCode(value)\r\n        }\r\n    }\r\n    function compile() {\r\n        setLoading(true);\r\n        if (userCode === ``) {\r\n            return\r\n        }\r\n\r\n        // Post request to compile endpoint\r\n        axios.post(`http://localhost:8000/compile`, {\r\n            code: userCode,\r\n            language: userLang,\r\n            input: userInput\r\n        }).then((res) => {\r\n            setUserOutput(res.data.output);\r\n        }).then(() => {\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    // Function to clear the output screen\r\n    function clearOutput() {\r\n        setUserOutput(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"codingScreenBody\">\r\n            <NavBar />\r\n            <div className=\"header\">\r\n                <h1>Python Loops</h1>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"question\">\r\n                    <h2>What is your name</h2>\r\n                </div>\r\n\r\n                <div className=\"editor-output-container\">\r\n                    <div className=\"code-editor\" id=\"editor\">\r\n                        <AceEditor\r\n                            mode={userLang}\r\n                            theme={userTheme}\r\n                            name=\"my-editor\"\r\n                            width=\"100%\"\r\n                            height=\"800px\"\r\n                            editorProps={{ $blockScrolling: true }}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"output-area\">\r\n                        {/* Add your output area content here */}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"button-container\">\r\n                    <button type=\"submit\" onClick={() => compile()}>Run</button>\r\n                    <button type=\"button\">Reset</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CodingScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}