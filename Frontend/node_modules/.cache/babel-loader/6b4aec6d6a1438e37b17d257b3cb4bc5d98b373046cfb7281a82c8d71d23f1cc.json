{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rushi\\\\OneDrive\\\\Desktop\\\\Project\\\\my-app\\\\src\\\\components\\\\Exercise.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ExerciseButton from \"./ExerciseButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Exercise(props) {\n  _s();\n  const navigate = useNavigate();\n  const handleExerciseButtonClick = () => {\n    // Call the onExerciseButtonClick prop with the exerciseType\n    props.onExerciseButtonClick(props.exerciseType);\n\n    // Navigate to the CodingScreen\n    navigate(\"/codingscreen\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.para\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseButton, {\n      btnClassName: \"exerBtn\",\n      href: \"#\",\n      btnValue: \"Solve Challenges\",\n      onClick: handleExerciseButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Exercise, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Exercise;\nexport default Exercise;\nvar _c;\n$RefreshReg$(_c, \"Exercise\");","map":{"version":3,"names":["React","useNavigate","ExerciseButton","jsxDEV","_jsxDEV","Exercise","props","_s","navigate","handleExerciseButtonClick","onExerciseButtonClick","exerciseType","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","para","btnClassName","href","btnValue","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rushi/OneDrive/Desktop/Project/my-app/src/components/Exercise.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ExerciseButton from \"./ExerciseButton\";\r\n\r\nfunction Exercise(props) {\r\n  const navigate = useNavigate();\r\n\r\n  const handleExerciseButtonClick = () => {\r\n    // Call the onExerciseButtonClick prop with the exerciseType\r\n    props.onExerciseButtonClick(props.exerciseType);\r\n\r\n    // Navigate to the CodingScreen\r\n    navigate(\"/codingscreen\");\r\n  };\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.para}</p>\r\n      {/* Call the handleExerciseButtonClick function when the button is clicked */}\r\n      <ExerciseButton\r\n        btnClassName=\"exerBtn\"\r\n        href=\"#\"\r\n        btnValue=\"Solve Challenges\"\r\n        onClick={handleExerciseButtonClick}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Exercise;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,yBAAyB,GAAGA,CAAA,KAAM;IACtC;IACAH,KAAK,CAACI,qBAAqB,CAACJ,KAAK,CAACK,YAAY,CAAC;;IAE/C;IACAH,QAAQ,CAAC,eAAe,CAAC;EAC3B,CAAC;EAED,oBACEJ,OAAA;IAAKQ,SAAS,EAAEN,KAAK,CAACM,SAAU;IAAAC,QAAA,gBAC9BT,OAAA;MAAAS,QAAA,EAAKP,KAAK,CAACQ;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBd,OAAA;MAAAS,QAAA,EAAIP,KAAK,CAACa;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnBd,OAAA,CAACF,cAAc;MACbkB,YAAY,EAAC,SAAS;MACtBC,IAAI,EAAC,GAAG;MACRC,QAAQ,EAAC,kBAAkB;MAC3BC,OAAO,EAAEd;IAA0B;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACX,EAAA,CAxBQF,QAAQ;EAAA,QACEJ,WAAW;AAAA;AAAAuB,EAAA,GADrBnB,QAAQ;AA0BjB,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}